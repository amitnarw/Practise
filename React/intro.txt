React is a js library (not framework) for building user interfaces.
It is use to make single page applications and it also allow us to reuse a component.
React sometimes also called frontend js framework, but it's a library made by facebook.

- Instead manipulating browser's DOM directly, React create a virtual DOM in memory and here it make 
necessary changes before making changes in browser's DOM. Also React only changes what is needed to be
changed and changed only them. Virtual DOM is light weight.

- For testing purpose we can directly use React in HTML using 3 CDN. First 2 let us write React in js
and third one (Babel) allow us write JSX syntax.
This is ok for testing purpose but if we want it for production, then we need to setup React environment.

React environment = 
- To create a new react app we can use official way to create react app and for this we need nodejs
npx create-react-app my-react-app
my-react-app is app name. If we want to use latest create-react-app the first we have to uninstall it
npm uninstall -g create-react-app

After the app is created, we can run it using (3000 is default port)
npm start

- JSX (Javascript XML)
It allow us to write HTML in react and it makes it easier to write and add HTML in react.
Using JSX we can create HTML elements and place them in DOM. As in js we have to createElement()
and then appendChild() to make it work, but using JSX we don't have to anything like that.
JSX converts HTML tags into react elements.

Without JSX =
React.createElement('h1', {}, 'This is made without JSX')

With JSX = 
<h1>This is made using JSX</h1>

- If we want to write any expressions then we have to use {} and write any expression b/w them.

- We have to wrap HTML code in one Top level element.
For this we can use <div></div> or we can use fragments <></>
Fragments will prevent us using/adding any unnecessary extra nodes to the DOM.

- As a JSX rule, elements must be closed properly or else will give error.

- Because class word is reserved in js, we have to use className in JSX for class attribute.

- if else are not supported inside JSX, so we have to use them outside.
Or else we have to use ternary expressions.

React conditional rendering =
- if statement

function One(){
    return <p>One is selected</p>
}

function Two(){
    return <p>Two is selected</p>
}

function Main(props){
    if (props.num==1){
        return <One />
    }
    return <Two />
}
root.render(<Main num='1' />);

- Logical && operator
function Main(props){
    return(
        <>
            <h1>Selection:</h1>
            {props.num == '1' &&
            <p>One is selected</p>
            }
            {props.num !== '1' &&
            <p>Two is selected</p>
            }
        </>
    )
}
root.render(<Main num='1' />);

- Ternary operator (condition ? true : false)
function One(){
  return <p>One is selected</p>
}

function Two(){
  return <p>Two is selected</p>
}

function Main(props){
  return (
    <>
    {props.num == 1 ? <One /> : <Two />}
    </>
  )
}
root.render(<Main num='1' />);
