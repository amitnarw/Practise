Array is a special variable or object that can hold more then 1 value. All elements are stored under single name.

- can also create an array like this =
const arr = new Array('one', 'two', 'three')

- innerText = typeof arr[1, 2] = object

- Array element can be an object, variable, function, array, etc.

ARRAY METHODS = 

let arr = [1, 2, 3, 4, 'five', 'six']

- arr.at(index) is same as arr[index]
We can use -ve values in arr.at(index) which will give result from the end of the array.
Negative values are not allowed in arr[]

- arr.concat(arr1) = concat/join both arrays and return a new array.
We can concat as many arrays we want using this arr.concat(arr1, arr2, arr3, arr4)

- copyWithin(target, start, end) = Overwrites/replace the existing values
[1,2,3,4].copyWithin(2) = [1,2,1,4] copy index 0 element to index 2.
[1,2,3,4].copyWithin(2,1) = [1,2,2,4] copy index 1 element to index 2.
[1,2,3,4,5,6].copyWithin(2,0,2) = [1,2,1,2,5,6] copy elements from 0-2 to index 2.

- arr.entries() = returns a new array with key/value pair

- arr.every(function(currentValue, index, arr), thisValue) =
Returns true if condition is true for every element else return false.
Empty element will be treated like the one who is not following the condition.

- arr.fill(value, start, end) =
Replace all values in selected array with the value provided. Or will fill from start index to end index if given.

- arr.filter(function(currentValue, index, arr), thisValue) =
Returns element which follow the condition. Return empty array if no one follow the condition.

- arr.find(function(currentValue, index, arr), thisValue) =
Only returns the first element that follow the condition, else return undefined if no one follows.

- arr.findIndex(function(currentValue, index, arr), thisValue) =
Only returns the first element's index that follow the condition, else -1.

- arr.findLast(function(currentValue, index, arr), thisValue) =
Only returns the value of last element that pass the test. Else undefined.

- arr.findLastIndex(function(currentValue, index, arr), thisValue) =
Only returns index of the last element that pass the test. Else -1.

- arr.flat(depth) = 
Returns a new array with sub-array concatenated. depth means how deep should flat() works. default is 1.
[[1,2],[3,4],[5,6]].flat()[1] = 2
[1,2,[3,[4,5],6],9,8].flat()[3] = 4,5
[1,2,[3,[4,5],6],9,8].flat(2)[3] = 4

